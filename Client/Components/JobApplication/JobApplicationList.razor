@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IJobApplicationDataService JobApplicationDataService
@inject ICompanyDataService CompanyDataService
@inject NavigationManager NavigationManager

<h1>Job Applications</h1>

@if (JobApplications != null)
{
    @if (showAddJobButton)
    {
        <AddJobApplicationDialog @ref="AddJobApplicationDialog" OnNewJobApplicationSaved="NewJobApplicationAdded" />

        <div style="padding-bottom: 10px;">
            <button type="button" class="btn btn-primary" @onclick="ShowAddJobApplicationModal">
                <i class="fas fa-plus-square"></i> Add Job Application
            </button>
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <span style="color:red"><i class="fas fa-exclamation-triangle"></i> You must add a company before you can add a job. <button class="btn btn-danger" @onclick="NavigateToCompanies">Go to Companies</button></span>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Job Title</th>
                    <th scope="col">Company</th>
                    <th scope="col">Applcation Date</th>
                    <th scope="col">Status</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                <GenericList Items="JobApplications">
                    <EmptyTemplate>
                        <tr>
                            <td colspan="5" style="color:red; text-align: center;"><i class="fas fa-exclamation-triangle"></i> You have no job applications.</td>
                        </tr>
                    </EmptyTemplate>
                    <ElementTemplate Context="application">
                        <JobApplicationListRow JobApplication="application" @key="application" OnRowChanged="OnInitializedAsync" />
                    </ElementTemplate>
                </GenericList>
            </tbody>
        </table>
    </div>
}
else
{
    <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}

@code {
    [CascadingParameter]
    public Guid UserId { get; set; }

    public List<JobApplicationDTO> JobApplications { get; set; }

    AddJobApplicationDialog AddJobApplicationDialog { get; set; }

    bool showAddJobButton { get; set; } = false;

    public async Task GetJobApplicationsAsync()
    {
        JobApplications = (await JobApplicationDataService.GetJobApplicationsAsync(UserId)).OrderByDescending(j => j.ApplicationDate).ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        if (await CompanyDataService.GetCompanyCountForUserAsync(UserId) > 0)
            showAddJobButton = true;
        await GetJobApplicationsAsync();
    }

    protected async Task NewJobApplicationAdded(JobApplicationDTO jobApplication)
    {
        Console.WriteLine($"New job application ({jobApplication.JobTitle}) was added to the database");
        await GetJobApplicationsAsync();
        await InvokeAsync(StateHasChanged);
    }

    protected void ShowAddJobApplicationModal()
    {
        AddJobApplicationDialog.Show();
    }

    protected void NavigateToCompanies()
    {
        NavigationManager.NavigateTo($"company/all");
    }
}
